// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: simulator.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "simulator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace service {

namespace {

const ::google::protobuf::Descriptor* State_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  State_reflection_ = NULL;
const ::google::protobuf::Descriptor* Trajectory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Trajectory_reflection_ = NULL;
const ::google::protobuf::Descriptor* FetchEnvRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FetchEnvRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* FetchEnvResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FetchEnvResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PushMyTrajectoryRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushMyTrajectoryRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PushMyTrajectoryResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushMyTrajectoryResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_simulator_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_simulator_2eproto() {
  protobuf_AddDesc_simulator_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "simulator.proto");
  GOOGLE_CHECK(file != NULL);
  State_descriptor_ = file->message_type(0);
  static const int State_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, track_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, frame_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, timestamp_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, agent_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, vx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, vy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, psi_rad_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, width_),
  };
  State_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      State_descriptor_,
      State::default_instance_,
      State_offsets_,
      -1,
      -1,
      -1,
      sizeof(State),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, _is_default_instance_));
  Trajectory_descriptor_ = file->message_type(1);
  static const int Trajectory_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trajectory, state_),
  };
  Trajectory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Trajectory_descriptor_,
      Trajectory::default_instance_,
      Trajectory_offsets_,
      -1,
      -1,
      -1,
      sizeof(Trajectory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trajectory, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trajectory, _is_default_instance_));
  FetchEnvRequest_descriptor_ = file->message_type(2);
  static const int FetchEnvRequest_offsets_[1] = {
  };
  FetchEnvRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FetchEnvRequest_descriptor_,
      FetchEnvRequest::default_instance_,
      FetchEnvRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(FetchEnvRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchEnvRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchEnvRequest, _is_default_instance_));
  FetchEnvResponse_descriptor_ = file->message_type(3);
  static const int FetchEnvResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchEnvResponse, resp_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchEnvResponse, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchEnvResponse, trajectory_),
  };
  FetchEnvResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FetchEnvResponse_descriptor_,
      FetchEnvResponse::default_instance_,
      FetchEnvResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(FetchEnvResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchEnvResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FetchEnvResponse, _is_default_instance_));
  PushMyTrajectoryRequest_descriptor_ = file->message_type(4);
  static const int PushMyTrajectoryRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMyTrajectoryRequest, trajectory_),
  };
  PushMyTrajectoryRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PushMyTrajectoryRequest_descriptor_,
      PushMyTrajectoryRequest::default_instance_,
      PushMyTrajectoryRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PushMyTrajectoryRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMyTrajectoryRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMyTrajectoryRequest, _is_default_instance_));
  PushMyTrajectoryResponse_descriptor_ = file->message_type(5);
  static const int PushMyTrajectoryResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMyTrajectoryResponse, resp_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMyTrajectoryResponse, msg_),
  };
  PushMyTrajectoryResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PushMyTrajectoryResponse_descriptor_,
      PushMyTrajectoryResponse::default_instance_,
      PushMyTrajectoryResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(PushMyTrajectoryResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMyTrajectoryResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMyTrajectoryResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_simulator_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      State_descriptor_, &State::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Trajectory_descriptor_, &Trajectory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FetchEnvRequest_descriptor_, &FetchEnvRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FetchEnvResponse_descriptor_, &FetchEnvResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PushMyTrajectoryRequest_descriptor_, &PushMyTrajectoryRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PushMyTrajectoryResponse_descriptor_, &PushMyTrajectoryResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_simulator_2eproto() {
  delete State::default_instance_;
  delete State_reflection_;
  delete Trajectory::default_instance_;
  delete Trajectory_reflection_;
  delete FetchEnvRequest::default_instance_;
  delete FetchEnvRequest_reflection_;
  delete FetchEnvResponse::default_instance_;
  delete FetchEnvResponse_reflection_;
  delete PushMyTrajectoryRequest::default_instance_;
  delete PushMyTrajectoryRequest_reflection_;
  delete PushMyTrajectoryResponse::default_instance_;
  delete PushMyTrajectoryResponse_reflection_;
}

void protobuf_AddDesc_simulator_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_simulator_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017simulator.proto\022\007service\"\263\001\n\005State\022\020\n\010"
    "track_id\030\001 \001(\004\022\020\n\010frame_id\030\002 \001(\004\022\024\n\014time"
    "stamp_ms\030\003 \001(\004\022\022\n\nagent_type\030\004 \001(\t\022\t\n\001x\030"
    "\005 \001(\001\022\t\n\001y\030\006 \001(\001\022\n\n\002vx\030\007 \001(\001\022\n\n\002vy\030\010 \001(\001"
    "\022\017\n\007psi_rad\030\t \001(\001\022\016\n\006length\030\n \001(\001\022\r\n\005wid"
    "th\030\013 \001(\001\"+\n\nTrajectory\022\035\n\005state\030\001 \003(\0132\016."
    "service.State\"\021\n\017FetchEnvRequest\"[\n\020Fetc"
    "hEnvResponse\022\021\n\tresp_code\030\001 \001(\005\022\013\n\003msg\030\002"
    " \001(\t\022\'\n\ntrajectory\030\003 \001(\0132\023.service.Traje"
    "ctory\"B\n\027PushMyTrajectoryRequest\022\'\n\ntraj"
    "ectory\030\003 \001(\0132\023.service.Trajectory\":\n\030Pus"
    "hMyTrajectoryResponse\022\021\n\tresp_code\030\001 \001(\005"
    "\022\013\n\003msg\030\002 \001(\t2\257\001\n\017SimulatorServer\022A\n\010Fet"
    "chEnv\022\030.service.FetchEnvRequest\032\031.servic"
    "e.FetchEnvResponse\"\000\022Y\n\020PushMyTrajectory"
    "\022 .service.PushMyTrajectoryRequest\032!.ser"
    "vice.PushMyTrajectoryResponse\"\000b\006proto3", 679);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "simulator.proto", &protobuf_RegisterTypes);
  State::default_instance_ = new State();
  Trajectory::default_instance_ = new Trajectory();
  FetchEnvRequest::default_instance_ = new FetchEnvRequest();
  FetchEnvResponse::default_instance_ = new FetchEnvResponse();
  PushMyTrajectoryRequest::default_instance_ = new PushMyTrajectoryRequest();
  PushMyTrajectoryResponse::default_instance_ = new PushMyTrajectoryResponse();
  State::default_instance_->InitAsDefaultInstance();
  Trajectory::default_instance_->InitAsDefaultInstance();
  FetchEnvRequest::default_instance_->InitAsDefaultInstance();
  FetchEnvResponse::default_instance_->InitAsDefaultInstance();
  PushMyTrajectoryRequest::default_instance_->InitAsDefaultInstance();
  PushMyTrajectoryResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_simulator_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_simulator_2eproto {
  StaticDescriptorInitializer_simulator_2eproto() {
    protobuf_AddDesc_simulator_2eproto();
  }
} static_descriptor_initializer_simulator_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int State::kTrackIdFieldNumber;
const int State::kFrameIdFieldNumber;
const int State::kTimestampMsFieldNumber;
const int State::kAgentTypeFieldNumber;
const int State::kXFieldNumber;
const int State::kYFieldNumber;
const int State::kVxFieldNumber;
const int State::kVyFieldNumber;
const int State::kPsiRadFieldNumber;
const int State::kLengthFieldNumber;
const int State::kWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

State::State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service.State)
}

void State::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

State::State(const State& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service.State)
}

void State::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  track_id_ = GOOGLE_ULONGLONG(0);
  frame_id_ = GOOGLE_ULONGLONG(0);
  timestamp_ms_ = GOOGLE_ULONGLONG(0);
  agent_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_ = 0;
  y_ = 0;
  vx_ = 0;
  vy_ = 0;
  psi_rad_ = 0;
  length_ = 0;
  width_ = 0;
}

State::~State() {
  // @@protoc_insertion_point(destructor:service.State)
  SharedDtor();
}

void State::SharedDtor() {
  agent_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* State::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return State_descriptor_;
}

const State& State::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_simulator_2eproto();
  return *default_instance_;
}

State* State::default_instance_ = NULL;

State* State::New(::google::protobuf::Arena* arena) const {
  State* n = new State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void State::Clear() {
// @@protoc_insertion_point(message_clear_start:service.State)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(State, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<State*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(track_id_, timestamp_ms_);
  ZR_(x_, vy_);
  agent_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(psi_rad_, width_);

#undef ZR_HELPER_
#undef ZR_

}

bool State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 track_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &track_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_frame_id;
        break;
      }

      // optional uint64 frame_id = 2;
      case 2: {
        if (tag == 16) {
         parse_frame_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &frame_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_timestamp_ms;
        break;
      }

      // optional uint64 timestamp_ms = 3;
      case 3: {
        if (tag == 24) {
         parse_timestamp_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_agent_type;
        break;
      }

      // optional string agent_type = 4;
      case 4: {
        if (tag == 34) {
         parse_agent_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_agent_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->agent_type().data(), this->agent_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service.State.agent_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_x;
        break;
      }

      // optional double x = 5;
      case 5: {
        if (tag == 41) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_y;
        break;
      }

      // optional double y = 6;
      case 6: {
        if (tag == 49) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_vx;
        break;
      }

      // optional double vx = 7;
      case 7: {
        if (tag == 57) {
         parse_vx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_vy;
        break;
      }

      // optional double vy = 8;
      case 8: {
        if (tag == 65) {
         parse_vy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_psi_rad;
        break;
      }

      // optional double psi_rad = 9;
      case 9: {
        if (tag == 73) {
         parse_psi_rad:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &psi_rad_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_length;
        break;
      }

      // optional double length = 10;
      case 10: {
        if (tag == 81) {
         parse_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_width;
        break;
      }

      // optional double width = 11;
      case 11: {
        if (tag == 89) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service.State)
  return false;
#undef DO_
}

void State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service.State)
  // optional uint64 track_id = 1;
  if (this->track_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->track_id(), output);
  }

  // optional uint64 frame_id = 2;
  if (this->frame_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->frame_id(), output);
  }

  // optional uint64 timestamp_ms = 3;
  if (this->timestamp_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->timestamp_ms(), output);
  }

  // optional string agent_type = 4;
  if (this->agent_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->agent_type().data(), this->agent_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service.State.agent_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->agent_type(), output);
  }

  // optional double x = 5;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->x(), output);
  }

  // optional double y = 6;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->y(), output);
  }

  // optional double vx = 7;
  if (this->vx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->vx(), output);
  }

  // optional double vy = 8;
  if (this->vy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->vy(), output);
  }

  // optional double psi_rad = 9;
  if (this->psi_rad() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->psi_rad(), output);
  }

  // optional double length = 10;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->length(), output);
  }

  // optional double width = 11;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->width(), output);
  }

  // @@protoc_insertion_point(serialize_end:service.State)
}

::google::protobuf::uint8* State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.State)
  // optional uint64 track_id = 1;
  if (this->track_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->track_id(), target);
  }

  // optional uint64 frame_id = 2;
  if (this->frame_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->frame_id(), target);
  }

  // optional uint64 timestamp_ms = 3;
  if (this->timestamp_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->timestamp_ms(), target);
  }

  // optional string agent_type = 4;
  if (this->agent_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->agent_type().data(), this->agent_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service.State.agent_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->agent_type(), target);
  }

  // optional double x = 5;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->x(), target);
  }

  // optional double y = 6;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->y(), target);
  }

  // optional double vx = 7;
  if (this->vx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->vx(), target);
  }

  // optional double vy = 8;
  if (this->vy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->vy(), target);
  }

  // optional double psi_rad = 9;
  if (this->psi_rad() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->psi_rad(), target);
  }

  // optional double length = 10;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->length(), target);
  }

  // optional double width = 11;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->width(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service.State)
  return target;
}

int State::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:service.State)
  int total_size = 0;

  // optional uint64 track_id = 1;
  if (this->track_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->track_id());
  }

  // optional uint64 frame_id = 2;
  if (this->frame_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->frame_id());
  }

  // optional uint64 timestamp_ms = 3;
  if (this->timestamp_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp_ms());
  }

  // optional string agent_type = 4;
  if (this->agent_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->agent_type());
  }

  // optional double x = 5;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // optional double y = 6;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // optional double vx = 7;
  if (this->vx() != 0) {
    total_size += 1 + 8;
  }

  // optional double vy = 8;
  if (this->vy() != 0) {
    total_size += 1 + 8;
  }

  // optional double psi_rad = 9;
  if (this->psi_rad() != 0) {
    total_size += 1 + 8;
  }

  // optional double length = 10;
  if (this->length() != 0) {
    total_size += 1 + 8;
  }

  // optional double width = 11;
  if (this->width() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.State)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const State* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.State)
    MergeFrom(*source);
  }
}

void State::MergeFrom(const State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.State)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.track_id() != 0) {
    set_track_id(from.track_id());
  }
  if (from.frame_id() != 0) {
    set_frame_id(from.frame_id());
  }
  if (from.timestamp_ms() != 0) {
    set_timestamp_ms(from.timestamp_ms());
  }
  if (from.agent_type().size() > 0) {

    agent_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agent_type_);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.vx() != 0) {
    set_vx(from.vx());
  }
  if (from.vy() != 0) {
    set_vy(from.vy());
  }
  if (from.psi_rad() != 0) {
    set_psi_rad(from.psi_rad());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
}

void State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void State::CopyFrom(const State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool State::IsInitialized() const {

  return true;
}

void State::Swap(State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void State::InternalSwap(State* other) {
  std::swap(track_id_, other->track_id_);
  std::swap(frame_id_, other->frame_id_);
  std::swap(timestamp_ms_, other->timestamp_ms_);
  agent_type_.Swap(&other->agent_type_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(vx_, other->vx_);
  std::swap(vy_, other->vy_);
  std::swap(psi_rad_, other->psi_rad_);
  std::swap(length_, other->length_);
  std::swap(width_, other->width_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata State::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = State_descriptor_;
  metadata.reflection = State_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// State

// optional uint64 track_id = 1;
void State::clear_track_id() {
  track_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 State::track_id() const {
  // @@protoc_insertion_point(field_get:service.State.track_id)
  return track_id_;
}
 void State::set_track_id(::google::protobuf::uint64 value) {
  
  track_id_ = value;
  // @@protoc_insertion_point(field_set:service.State.track_id)
}

// optional uint64 frame_id = 2;
void State::clear_frame_id() {
  frame_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 State::frame_id() const {
  // @@protoc_insertion_point(field_get:service.State.frame_id)
  return frame_id_;
}
 void State::set_frame_id(::google::protobuf::uint64 value) {
  
  frame_id_ = value;
  // @@protoc_insertion_point(field_set:service.State.frame_id)
}

// optional uint64 timestamp_ms = 3;
void State::clear_timestamp_ms() {
  timestamp_ms_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 State::timestamp_ms() const {
  // @@protoc_insertion_point(field_get:service.State.timestamp_ms)
  return timestamp_ms_;
}
 void State::set_timestamp_ms(::google::protobuf::uint64 value) {
  
  timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:service.State.timestamp_ms)
}

// optional string agent_type = 4;
void State::clear_agent_type() {
  agent_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& State::agent_type() const {
  // @@protoc_insertion_point(field_get:service.State.agent_type)
  return agent_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void State::set_agent_type(const ::std::string& value) {
  
  agent_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service.State.agent_type)
}
 void State::set_agent_type(const char* value) {
  
  agent_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service.State.agent_type)
}
 void State::set_agent_type(const char* value, size_t size) {
  
  agent_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service.State.agent_type)
}
 ::std::string* State::mutable_agent_type() {
  
  // @@protoc_insertion_point(field_mutable:service.State.agent_type)
  return agent_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* State::release_agent_type() {
  // @@protoc_insertion_point(field_release:service.State.agent_type)
  
  return agent_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void State::set_allocated_agent_type(::std::string* agent_type) {
  if (agent_type != NULL) {
    
  } else {
    
  }
  agent_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_type);
  // @@protoc_insertion_point(field_set_allocated:service.State.agent_type)
}

// optional double x = 5;
void State::clear_x() {
  x_ = 0;
}
 double State::x() const {
  // @@protoc_insertion_point(field_get:service.State.x)
  return x_;
}
 void State::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:service.State.x)
}

// optional double y = 6;
void State::clear_y() {
  y_ = 0;
}
 double State::y() const {
  // @@protoc_insertion_point(field_get:service.State.y)
  return y_;
}
 void State::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:service.State.y)
}

// optional double vx = 7;
void State::clear_vx() {
  vx_ = 0;
}
 double State::vx() const {
  // @@protoc_insertion_point(field_get:service.State.vx)
  return vx_;
}
 void State::set_vx(double value) {
  
  vx_ = value;
  // @@protoc_insertion_point(field_set:service.State.vx)
}

// optional double vy = 8;
void State::clear_vy() {
  vy_ = 0;
}
 double State::vy() const {
  // @@protoc_insertion_point(field_get:service.State.vy)
  return vy_;
}
 void State::set_vy(double value) {
  
  vy_ = value;
  // @@protoc_insertion_point(field_set:service.State.vy)
}

// optional double psi_rad = 9;
void State::clear_psi_rad() {
  psi_rad_ = 0;
}
 double State::psi_rad() const {
  // @@protoc_insertion_point(field_get:service.State.psi_rad)
  return psi_rad_;
}
 void State::set_psi_rad(double value) {
  
  psi_rad_ = value;
  // @@protoc_insertion_point(field_set:service.State.psi_rad)
}

// optional double length = 10;
void State::clear_length() {
  length_ = 0;
}
 double State::length() const {
  // @@protoc_insertion_point(field_get:service.State.length)
  return length_;
}
 void State::set_length(double value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:service.State.length)
}

// optional double width = 11;
void State::clear_width() {
  width_ = 0;
}
 double State::width() const {
  // @@protoc_insertion_point(field_get:service.State.width)
  return width_;
}
 void State::set_width(double value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:service.State.width)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trajectory::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trajectory::Trajectory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service.Trajectory)
}

void Trajectory::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Trajectory::Trajectory(const Trajectory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service.Trajectory)
}

void Trajectory::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Trajectory::~Trajectory() {
  // @@protoc_insertion_point(destructor:service.Trajectory)
  SharedDtor();
}

void Trajectory::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Trajectory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Trajectory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Trajectory_descriptor_;
}

const Trajectory& Trajectory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_simulator_2eproto();
  return *default_instance_;
}

Trajectory* Trajectory::default_instance_ = NULL;

Trajectory* Trajectory::New(::google::protobuf::Arena* arena) const {
  Trajectory* n = new Trajectory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Trajectory::Clear() {
// @@protoc_insertion_point(message_clear_start:service.Trajectory)
  state_.Clear();
}

bool Trajectory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service.Trajectory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .service.State state = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_state;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service.Trajectory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service.Trajectory)
  return false;
#undef DO_
}

void Trajectory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service.Trajectory)
  // repeated .service.State state = 1;
  for (unsigned int i = 0, n = this->state_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->state(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service.Trajectory)
}

::google::protobuf::uint8* Trajectory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.Trajectory)
  // repeated .service.State state = 1;
  for (unsigned int i = 0, n = this->state_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->state(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service.Trajectory)
  return target;
}

int Trajectory::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:service.Trajectory)
  int total_size = 0;

  // repeated .service.State state = 1;
  total_size += 1 * this->state_size();
  for (int i = 0; i < this->state_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->state(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Trajectory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.Trajectory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Trajectory* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Trajectory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.Trajectory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.Trajectory)
    MergeFrom(*source);
  }
}

void Trajectory::MergeFrom(const Trajectory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.Trajectory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  state_.MergeFrom(from.state_);
}

void Trajectory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.Trajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trajectory::CopyFrom(const Trajectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.Trajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trajectory::IsInitialized() const {

  return true;
}

void Trajectory::Swap(Trajectory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trajectory::InternalSwap(Trajectory* other) {
  state_.UnsafeArenaSwap(&other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Trajectory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Trajectory_descriptor_;
  metadata.reflection = Trajectory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Trajectory

// repeated .service.State state = 1;
int Trajectory::state_size() const {
  return state_.size();
}
void Trajectory::clear_state() {
  state_.Clear();
}
const ::service::State& Trajectory::state(int index) const {
  // @@protoc_insertion_point(field_get:service.Trajectory.state)
  return state_.Get(index);
}
::service::State* Trajectory::mutable_state(int index) {
  // @@protoc_insertion_point(field_mutable:service.Trajectory.state)
  return state_.Mutable(index);
}
::service::State* Trajectory::add_state() {
  // @@protoc_insertion_point(field_add:service.Trajectory.state)
  return state_.Add();
}
::google::protobuf::RepeatedPtrField< ::service::State >*
Trajectory::mutable_state() {
  // @@protoc_insertion_point(field_mutable_list:service.Trajectory.state)
  return &state_;
}
const ::google::protobuf::RepeatedPtrField< ::service::State >&
Trajectory::state() const {
  // @@protoc_insertion_point(field_list:service.Trajectory.state)
  return state_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FetchEnvRequest::FetchEnvRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service.FetchEnvRequest)
}

void FetchEnvRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FetchEnvRequest::FetchEnvRequest(const FetchEnvRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service.FetchEnvRequest)
}

void FetchEnvRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

FetchEnvRequest::~FetchEnvRequest() {
  // @@protoc_insertion_point(destructor:service.FetchEnvRequest)
  SharedDtor();
}

void FetchEnvRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FetchEnvRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FetchEnvRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FetchEnvRequest_descriptor_;
}

const FetchEnvRequest& FetchEnvRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_simulator_2eproto();
  return *default_instance_;
}

FetchEnvRequest* FetchEnvRequest::default_instance_ = NULL;

FetchEnvRequest* FetchEnvRequest::New(::google::protobuf::Arena* arena) const {
  FetchEnvRequest* n = new FetchEnvRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FetchEnvRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.FetchEnvRequest)
}

bool FetchEnvRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service.FetchEnvRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:service.FetchEnvRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service.FetchEnvRequest)
  return false;
#undef DO_
}

void FetchEnvRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service.FetchEnvRequest)
  // @@protoc_insertion_point(serialize_end:service.FetchEnvRequest)
}

::google::protobuf::uint8* FetchEnvRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.FetchEnvRequest)
  // @@protoc_insertion_point(serialize_to_array_end:service.FetchEnvRequest)
  return target;
}

int FetchEnvRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:service.FetchEnvRequest)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FetchEnvRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.FetchEnvRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FetchEnvRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FetchEnvRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.FetchEnvRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.FetchEnvRequest)
    MergeFrom(*source);
  }
}

void FetchEnvRequest::MergeFrom(const FetchEnvRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.FetchEnvRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void FetchEnvRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.FetchEnvRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchEnvRequest::CopyFrom(const FetchEnvRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.FetchEnvRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchEnvRequest::IsInitialized() const {

  return true;
}

void FetchEnvRequest::Swap(FetchEnvRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FetchEnvRequest::InternalSwap(FetchEnvRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FetchEnvRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FetchEnvRequest_descriptor_;
  metadata.reflection = FetchEnvRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FetchEnvRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FetchEnvResponse::kRespCodeFieldNumber;
const int FetchEnvResponse::kMsgFieldNumber;
const int FetchEnvResponse::kTrajectoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FetchEnvResponse::FetchEnvResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service.FetchEnvResponse)
}

void FetchEnvResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  trajectory_ = const_cast< ::service::Trajectory*>(&::service::Trajectory::default_instance());
}

FetchEnvResponse::FetchEnvResponse(const FetchEnvResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service.FetchEnvResponse)
}

void FetchEnvResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  resp_code_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trajectory_ = NULL;
}

FetchEnvResponse::~FetchEnvResponse() {
  // @@protoc_insertion_point(destructor:service.FetchEnvResponse)
  SharedDtor();
}

void FetchEnvResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete trajectory_;
  }
}

void FetchEnvResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FetchEnvResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FetchEnvResponse_descriptor_;
}

const FetchEnvResponse& FetchEnvResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_simulator_2eproto();
  return *default_instance_;
}

FetchEnvResponse* FetchEnvResponse::default_instance_ = NULL;

FetchEnvResponse* FetchEnvResponse::New(::google::protobuf::Arena* arena) const {
  FetchEnvResponse* n = new FetchEnvResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FetchEnvResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.FetchEnvResponse)
  resp_code_ = 0;
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && trajectory_ != NULL) delete trajectory_;
  trajectory_ = NULL;
}

bool FetchEnvResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service.FetchEnvResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 resp_code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resp_code_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service.FetchEnvResponse.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_trajectory;
        break;
      }

      // optional .service.Trajectory trajectory = 3;
      case 3: {
        if (tag == 26) {
         parse_trajectory:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trajectory()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service.FetchEnvResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service.FetchEnvResponse)
  return false;
#undef DO_
}

void FetchEnvResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service.FetchEnvResponse)
  // optional int32 resp_code = 1;
  if (this->resp_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resp_code(), output);
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service.FetchEnvResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional .service.Trajectory trajectory = 3;
  if (this->has_trajectory()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->trajectory_, output);
  }

  // @@protoc_insertion_point(serialize_end:service.FetchEnvResponse)
}

::google::protobuf::uint8* FetchEnvResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.FetchEnvResponse)
  // optional int32 resp_code = 1;
  if (this->resp_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->resp_code(), target);
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service.FetchEnvResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional .service.Trajectory trajectory = 3;
  if (this->has_trajectory()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->trajectory_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service.FetchEnvResponse)
  return target;
}

int FetchEnvResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:service.FetchEnvResponse)
  int total_size = 0;

  // optional int32 resp_code = 1;
  if (this->resp_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resp_code());
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // optional .service.Trajectory trajectory = 3;
  if (this->has_trajectory()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trajectory_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FetchEnvResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.FetchEnvResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FetchEnvResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FetchEnvResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.FetchEnvResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.FetchEnvResponse)
    MergeFrom(*source);
  }
}

void FetchEnvResponse::MergeFrom(const FetchEnvResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.FetchEnvResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.resp_code() != 0) {
    set_resp_code(from.resp_code());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_trajectory()) {
    mutable_trajectory()->::service::Trajectory::MergeFrom(from.trajectory());
  }
}

void FetchEnvResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.FetchEnvResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchEnvResponse::CopyFrom(const FetchEnvResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.FetchEnvResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchEnvResponse::IsInitialized() const {

  return true;
}

void FetchEnvResponse::Swap(FetchEnvResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FetchEnvResponse::InternalSwap(FetchEnvResponse* other) {
  std::swap(resp_code_, other->resp_code_);
  msg_.Swap(&other->msg_);
  std::swap(trajectory_, other->trajectory_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FetchEnvResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FetchEnvResponse_descriptor_;
  metadata.reflection = FetchEnvResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FetchEnvResponse

// optional int32 resp_code = 1;
void FetchEnvResponse::clear_resp_code() {
  resp_code_ = 0;
}
 ::google::protobuf::int32 FetchEnvResponse::resp_code() const {
  // @@protoc_insertion_point(field_get:service.FetchEnvResponse.resp_code)
  return resp_code_;
}
 void FetchEnvResponse::set_resp_code(::google::protobuf::int32 value) {
  
  resp_code_ = value;
  // @@protoc_insertion_point(field_set:service.FetchEnvResponse.resp_code)
}

// optional string msg = 2;
void FetchEnvResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FetchEnvResponse::msg() const {
  // @@protoc_insertion_point(field_get:service.FetchEnvResponse.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FetchEnvResponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service.FetchEnvResponse.msg)
}
 void FetchEnvResponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service.FetchEnvResponse.msg)
}
 void FetchEnvResponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service.FetchEnvResponse.msg)
}
 ::std::string* FetchEnvResponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:service.FetchEnvResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FetchEnvResponse::release_msg() {
  // @@protoc_insertion_point(field_release:service.FetchEnvResponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FetchEnvResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:service.FetchEnvResponse.msg)
}

// optional .service.Trajectory trajectory = 3;
bool FetchEnvResponse::has_trajectory() const {
  return !_is_default_instance_ && trajectory_ != NULL;
}
void FetchEnvResponse::clear_trajectory() {
  if (GetArenaNoVirtual() == NULL && trajectory_ != NULL) delete trajectory_;
  trajectory_ = NULL;
}
const ::service::Trajectory& FetchEnvResponse::trajectory() const {
  // @@protoc_insertion_point(field_get:service.FetchEnvResponse.trajectory)
  return trajectory_ != NULL ? *trajectory_ : *default_instance_->trajectory_;
}
::service::Trajectory* FetchEnvResponse::mutable_trajectory() {
  
  if (trajectory_ == NULL) {
    trajectory_ = new ::service::Trajectory;
  }
  // @@protoc_insertion_point(field_mutable:service.FetchEnvResponse.trajectory)
  return trajectory_;
}
::service::Trajectory* FetchEnvResponse::release_trajectory() {
  // @@protoc_insertion_point(field_release:service.FetchEnvResponse.trajectory)
  
  ::service::Trajectory* temp = trajectory_;
  trajectory_ = NULL;
  return temp;
}
void FetchEnvResponse::set_allocated_trajectory(::service::Trajectory* trajectory) {
  delete trajectory_;
  trajectory_ = trajectory;
  if (trajectory) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service.FetchEnvResponse.trajectory)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushMyTrajectoryRequest::kTrajectoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushMyTrajectoryRequest::PushMyTrajectoryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service.PushMyTrajectoryRequest)
}

void PushMyTrajectoryRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  trajectory_ = const_cast< ::service::Trajectory*>(&::service::Trajectory::default_instance());
}

PushMyTrajectoryRequest::PushMyTrajectoryRequest(const PushMyTrajectoryRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service.PushMyTrajectoryRequest)
}

void PushMyTrajectoryRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  trajectory_ = NULL;
}

PushMyTrajectoryRequest::~PushMyTrajectoryRequest() {
  // @@protoc_insertion_point(destructor:service.PushMyTrajectoryRequest)
  SharedDtor();
}

void PushMyTrajectoryRequest::SharedDtor() {
  if (this != default_instance_) {
    delete trajectory_;
  }
}

void PushMyTrajectoryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushMyTrajectoryRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushMyTrajectoryRequest_descriptor_;
}

const PushMyTrajectoryRequest& PushMyTrajectoryRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_simulator_2eproto();
  return *default_instance_;
}

PushMyTrajectoryRequest* PushMyTrajectoryRequest::default_instance_ = NULL;

PushMyTrajectoryRequest* PushMyTrajectoryRequest::New(::google::protobuf::Arena* arena) const {
  PushMyTrajectoryRequest* n = new PushMyTrajectoryRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PushMyTrajectoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.PushMyTrajectoryRequest)
  if (GetArenaNoVirtual() == NULL && trajectory_ != NULL) delete trajectory_;
  trajectory_ = NULL;
}

bool PushMyTrajectoryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service.PushMyTrajectoryRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .service.Trajectory trajectory = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trajectory()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service.PushMyTrajectoryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service.PushMyTrajectoryRequest)
  return false;
#undef DO_
}

void PushMyTrajectoryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service.PushMyTrajectoryRequest)
  // optional .service.Trajectory trajectory = 3;
  if (this->has_trajectory()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->trajectory_, output);
  }

  // @@protoc_insertion_point(serialize_end:service.PushMyTrajectoryRequest)
}

::google::protobuf::uint8* PushMyTrajectoryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.PushMyTrajectoryRequest)
  // optional .service.Trajectory trajectory = 3;
  if (this->has_trajectory()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->trajectory_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service.PushMyTrajectoryRequest)
  return target;
}

int PushMyTrajectoryRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:service.PushMyTrajectoryRequest)
  int total_size = 0;

  // optional .service.Trajectory trajectory = 3;
  if (this->has_trajectory()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trajectory_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushMyTrajectoryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.PushMyTrajectoryRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PushMyTrajectoryRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PushMyTrajectoryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.PushMyTrajectoryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.PushMyTrajectoryRequest)
    MergeFrom(*source);
  }
}

void PushMyTrajectoryRequest::MergeFrom(const PushMyTrajectoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.PushMyTrajectoryRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_trajectory()) {
    mutable_trajectory()->::service::Trajectory::MergeFrom(from.trajectory());
  }
}

void PushMyTrajectoryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.PushMyTrajectoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushMyTrajectoryRequest::CopyFrom(const PushMyTrajectoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.PushMyTrajectoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushMyTrajectoryRequest::IsInitialized() const {

  return true;
}

void PushMyTrajectoryRequest::Swap(PushMyTrajectoryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushMyTrajectoryRequest::InternalSwap(PushMyTrajectoryRequest* other) {
  std::swap(trajectory_, other->trajectory_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PushMyTrajectoryRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushMyTrajectoryRequest_descriptor_;
  metadata.reflection = PushMyTrajectoryRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PushMyTrajectoryRequest

// optional .service.Trajectory trajectory = 3;
bool PushMyTrajectoryRequest::has_trajectory() const {
  return !_is_default_instance_ && trajectory_ != NULL;
}
void PushMyTrajectoryRequest::clear_trajectory() {
  if (GetArenaNoVirtual() == NULL && trajectory_ != NULL) delete trajectory_;
  trajectory_ = NULL;
}
const ::service::Trajectory& PushMyTrajectoryRequest::trajectory() const {
  // @@protoc_insertion_point(field_get:service.PushMyTrajectoryRequest.trajectory)
  return trajectory_ != NULL ? *trajectory_ : *default_instance_->trajectory_;
}
::service::Trajectory* PushMyTrajectoryRequest::mutable_trajectory() {
  
  if (trajectory_ == NULL) {
    trajectory_ = new ::service::Trajectory;
  }
  // @@protoc_insertion_point(field_mutable:service.PushMyTrajectoryRequest.trajectory)
  return trajectory_;
}
::service::Trajectory* PushMyTrajectoryRequest::release_trajectory() {
  // @@protoc_insertion_point(field_release:service.PushMyTrajectoryRequest.trajectory)
  
  ::service::Trajectory* temp = trajectory_;
  trajectory_ = NULL;
  return temp;
}
void PushMyTrajectoryRequest::set_allocated_trajectory(::service::Trajectory* trajectory) {
  delete trajectory_;
  trajectory_ = trajectory;
  if (trajectory) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service.PushMyTrajectoryRequest.trajectory)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushMyTrajectoryResponse::kRespCodeFieldNumber;
const int PushMyTrajectoryResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushMyTrajectoryResponse::PushMyTrajectoryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service.PushMyTrajectoryResponse)
}

void PushMyTrajectoryResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PushMyTrajectoryResponse::PushMyTrajectoryResponse(const PushMyTrajectoryResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service.PushMyTrajectoryResponse)
}

void PushMyTrajectoryResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  resp_code_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PushMyTrajectoryResponse::~PushMyTrajectoryResponse() {
  // @@protoc_insertion_point(destructor:service.PushMyTrajectoryResponse)
  SharedDtor();
}

void PushMyTrajectoryResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PushMyTrajectoryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushMyTrajectoryResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushMyTrajectoryResponse_descriptor_;
}

const PushMyTrajectoryResponse& PushMyTrajectoryResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_simulator_2eproto();
  return *default_instance_;
}

PushMyTrajectoryResponse* PushMyTrajectoryResponse::default_instance_ = NULL;

PushMyTrajectoryResponse* PushMyTrajectoryResponse::New(::google::protobuf::Arena* arena) const {
  PushMyTrajectoryResponse* n = new PushMyTrajectoryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PushMyTrajectoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.PushMyTrajectoryResponse)
  resp_code_ = 0;
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PushMyTrajectoryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service.PushMyTrajectoryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 resp_code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resp_code_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service.PushMyTrajectoryResponse.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service.PushMyTrajectoryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service.PushMyTrajectoryResponse)
  return false;
#undef DO_
}

void PushMyTrajectoryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service.PushMyTrajectoryResponse)
  // optional int32 resp_code = 1;
  if (this->resp_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->resp_code(), output);
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service.PushMyTrajectoryResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:service.PushMyTrajectoryResponse)
}

::google::protobuf::uint8* PushMyTrajectoryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.PushMyTrajectoryResponse)
  // optional int32 resp_code = 1;
  if (this->resp_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->resp_code(), target);
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service.PushMyTrajectoryResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service.PushMyTrajectoryResponse)
  return target;
}

int PushMyTrajectoryResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:service.PushMyTrajectoryResponse)
  int total_size = 0;

  // optional int32 resp_code = 1;
  if (this->resp_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resp_code());
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushMyTrajectoryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.PushMyTrajectoryResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PushMyTrajectoryResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PushMyTrajectoryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.PushMyTrajectoryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.PushMyTrajectoryResponse)
    MergeFrom(*source);
  }
}

void PushMyTrajectoryResponse::MergeFrom(const PushMyTrajectoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.PushMyTrajectoryResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.resp_code() != 0) {
    set_resp_code(from.resp_code());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void PushMyTrajectoryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.PushMyTrajectoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushMyTrajectoryResponse::CopyFrom(const PushMyTrajectoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.PushMyTrajectoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushMyTrajectoryResponse::IsInitialized() const {

  return true;
}

void PushMyTrajectoryResponse::Swap(PushMyTrajectoryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushMyTrajectoryResponse::InternalSwap(PushMyTrajectoryResponse* other) {
  std::swap(resp_code_, other->resp_code_);
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PushMyTrajectoryResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushMyTrajectoryResponse_descriptor_;
  metadata.reflection = PushMyTrajectoryResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PushMyTrajectoryResponse

// optional int32 resp_code = 1;
void PushMyTrajectoryResponse::clear_resp_code() {
  resp_code_ = 0;
}
 ::google::protobuf::int32 PushMyTrajectoryResponse::resp_code() const {
  // @@protoc_insertion_point(field_get:service.PushMyTrajectoryResponse.resp_code)
  return resp_code_;
}
 void PushMyTrajectoryResponse::set_resp_code(::google::protobuf::int32 value) {
  
  resp_code_ = value;
  // @@protoc_insertion_point(field_set:service.PushMyTrajectoryResponse.resp_code)
}

// optional string msg = 2;
void PushMyTrajectoryResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PushMyTrajectoryResponse::msg() const {
  // @@protoc_insertion_point(field_get:service.PushMyTrajectoryResponse.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PushMyTrajectoryResponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service.PushMyTrajectoryResponse.msg)
}
 void PushMyTrajectoryResponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service.PushMyTrajectoryResponse.msg)
}
 void PushMyTrajectoryResponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service.PushMyTrajectoryResponse.msg)
}
 ::std::string* PushMyTrajectoryResponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:service.PushMyTrajectoryResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PushMyTrajectoryResponse::release_msg() {
  // @@protoc_insertion_point(field_release:service.PushMyTrajectoryResponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PushMyTrajectoryResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:service.PushMyTrajectoryResponse.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace service

// @@protoc_insertion_point(global_scope)
