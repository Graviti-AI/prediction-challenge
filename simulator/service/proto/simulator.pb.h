// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: simulator.proto

#ifndef PROTOBUF_simulator_2eproto__INCLUDED
#define PROTOBUF_simulator_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace service {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_simulator_2eproto();
void protobuf_AssignDesc_simulator_2eproto();
void protobuf_ShutdownFile_simulator_2eproto();

class FetchEnvRequest;
class FetchEnvResponse;
class PushMyTrajectoryRequest;
class PushMyTrajectoryResponse;
class State;
class Trajectory;

// ===================================================================

class State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service.State) */ {
 public:
  State();
  virtual ~State();

  State(const State& from);

  inline State& operator=(const State& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const State& default_instance();

  void Swap(State* other);

  // implements Message ----------------------------------------------

  inline State* New() const { return New(NULL); }

  State* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const State& from);
  void MergeFrom(const State& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 track_id = 1;
  void clear_track_id();
  static const int kTrackIdFieldNumber = 1;
  ::google::protobuf::uint64 track_id() const;
  void set_track_id(::google::protobuf::uint64 value);

  // optional uint64 frame_id = 2;
  void clear_frame_id();
  static const int kFrameIdFieldNumber = 2;
  ::google::protobuf::uint64 frame_id() const;
  void set_frame_id(::google::protobuf::uint64 value);

  // optional uint64 timestamp_ms = 3;
  void clear_timestamp_ms();
  static const int kTimestampMsFieldNumber = 3;
  ::google::protobuf::uint64 timestamp_ms() const;
  void set_timestamp_ms(::google::protobuf::uint64 value);

  // optional string agent_type = 4;
  void clear_agent_type();
  static const int kAgentTypeFieldNumber = 4;
  const ::std::string& agent_type() const;
  void set_agent_type(const ::std::string& value);
  void set_agent_type(const char* value);
  void set_agent_type(const char* value, size_t size);
  ::std::string* mutable_agent_type();
  ::std::string* release_agent_type();
  void set_allocated_agent_type(::std::string* agent_type);

  // optional double x = 5;
  void clear_x();
  static const int kXFieldNumber = 5;
  double x() const;
  void set_x(double value);

  // optional double y = 6;
  void clear_y();
  static const int kYFieldNumber = 6;
  double y() const;
  void set_y(double value);

  // optional double vx = 7;
  void clear_vx();
  static const int kVxFieldNumber = 7;
  double vx() const;
  void set_vx(double value);

  // optional double vy = 8;
  void clear_vy();
  static const int kVyFieldNumber = 8;
  double vy() const;
  void set_vy(double value);

  // optional double psi_rad = 9;
  void clear_psi_rad();
  static const int kPsiRadFieldNumber = 9;
  double psi_rad() const;
  void set_psi_rad(double value);

  // optional double length = 10;
  void clear_length();
  static const int kLengthFieldNumber = 10;
  double length() const;
  void set_length(double value);

  // optional double width = 11;
  void clear_width();
  static const int kWidthFieldNumber = 11;
  double width() const;
  void set_width(double value);

  // @@protoc_insertion_point(class_scope:service.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 track_id_;
  ::google::protobuf::uint64 frame_id_;
  ::google::protobuf::uint64 timestamp_ms_;
  ::google::protobuf::internal::ArenaStringPtr agent_type_;
  double x_;
  double y_;
  double vx_;
  double vy_;
  double psi_rad_;
  double length_;
  double width_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_simulator_2eproto();
  friend void protobuf_AssignDesc_simulator_2eproto();
  friend void protobuf_ShutdownFile_simulator_2eproto();

  void InitAsDefaultInstance();
  static State* default_instance_;
};
// -------------------------------------------------------------------

class Trajectory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service.Trajectory) */ {
 public:
  Trajectory();
  virtual ~Trajectory();

  Trajectory(const Trajectory& from);

  inline Trajectory& operator=(const Trajectory& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Trajectory& default_instance();

  void Swap(Trajectory* other);

  // implements Message ----------------------------------------------

  inline Trajectory* New() const { return New(NULL); }

  Trajectory* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Trajectory& from);
  void MergeFrom(const Trajectory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Trajectory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service.State state = 1;
  int state_size() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  const ::service::State& state(int index) const;
  ::service::State* mutable_state(int index);
  ::service::State* add_state();
  ::google::protobuf::RepeatedPtrField< ::service::State >*
      mutable_state();
  const ::google::protobuf::RepeatedPtrField< ::service::State >&
      state() const;

  // @@protoc_insertion_point(class_scope:service.Trajectory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::service::State > state_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_simulator_2eproto();
  friend void protobuf_AssignDesc_simulator_2eproto();
  friend void protobuf_ShutdownFile_simulator_2eproto();

  void InitAsDefaultInstance();
  static Trajectory* default_instance_;
};
// -------------------------------------------------------------------

class FetchEnvRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service.FetchEnvRequest) */ {
 public:
  FetchEnvRequest();
  virtual ~FetchEnvRequest();

  FetchEnvRequest(const FetchEnvRequest& from);

  inline FetchEnvRequest& operator=(const FetchEnvRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchEnvRequest& default_instance();

  void Swap(FetchEnvRequest* other);

  // implements Message ----------------------------------------------

  inline FetchEnvRequest* New() const { return New(NULL); }

  FetchEnvRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FetchEnvRequest& from);
  void MergeFrom(const FetchEnvRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FetchEnvRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:service.FetchEnvRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_simulator_2eproto();
  friend void protobuf_AssignDesc_simulator_2eproto();
  friend void protobuf_ShutdownFile_simulator_2eproto();

  void InitAsDefaultInstance();
  static FetchEnvRequest* default_instance_;
};
// -------------------------------------------------------------------

class FetchEnvResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service.FetchEnvResponse) */ {
 public:
  FetchEnvResponse();
  virtual ~FetchEnvResponse();

  FetchEnvResponse(const FetchEnvResponse& from);

  inline FetchEnvResponse& operator=(const FetchEnvResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FetchEnvResponse& default_instance();

  void Swap(FetchEnvResponse* other);

  // implements Message ----------------------------------------------

  inline FetchEnvResponse* New() const { return New(NULL); }

  FetchEnvResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FetchEnvResponse& from);
  void MergeFrom(const FetchEnvResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FetchEnvResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 resp_code = 1;
  void clear_resp_code();
  static const int kRespCodeFieldNumber = 1;
  ::google::protobuf::int32 resp_code() const;
  void set_resp_code(::google::protobuf::int32 value);

  // optional string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional .service.Trajectory trajectory = 3;
  bool has_trajectory() const;
  void clear_trajectory();
  static const int kTrajectoryFieldNumber = 3;
  const ::service::Trajectory& trajectory() const;
  ::service::Trajectory* mutable_trajectory();
  ::service::Trajectory* release_trajectory();
  void set_allocated_trajectory(::service::Trajectory* trajectory);

  // @@protoc_insertion_point(class_scope:service.FetchEnvResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::service::Trajectory* trajectory_;
  ::google::protobuf::int32 resp_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_simulator_2eproto();
  friend void protobuf_AssignDesc_simulator_2eproto();
  friend void protobuf_ShutdownFile_simulator_2eproto();

  void InitAsDefaultInstance();
  static FetchEnvResponse* default_instance_;
};
// -------------------------------------------------------------------

class PushMyTrajectoryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service.PushMyTrajectoryRequest) */ {
 public:
  PushMyTrajectoryRequest();
  virtual ~PushMyTrajectoryRequest();

  PushMyTrajectoryRequest(const PushMyTrajectoryRequest& from);

  inline PushMyTrajectoryRequest& operator=(const PushMyTrajectoryRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushMyTrajectoryRequest& default_instance();

  void Swap(PushMyTrajectoryRequest* other);

  // implements Message ----------------------------------------------

  inline PushMyTrajectoryRequest* New() const { return New(NULL); }

  PushMyTrajectoryRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushMyTrajectoryRequest& from);
  void MergeFrom(const PushMyTrajectoryRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PushMyTrajectoryRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service.Trajectory trajectory = 3;
  bool has_trajectory() const;
  void clear_trajectory();
  static const int kTrajectoryFieldNumber = 3;
  const ::service::Trajectory& trajectory() const;
  ::service::Trajectory* mutable_trajectory();
  ::service::Trajectory* release_trajectory();
  void set_allocated_trajectory(::service::Trajectory* trajectory);

  // @@protoc_insertion_point(class_scope:service.PushMyTrajectoryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service::Trajectory* trajectory_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_simulator_2eproto();
  friend void protobuf_AssignDesc_simulator_2eproto();
  friend void protobuf_ShutdownFile_simulator_2eproto();

  void InitAsDefaultInstance();
  static PushMyTrajectoryRequest* default_instance_;
};
// -------------------------------------------------------------------

class PushMyTrajectoryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service.PushMyTrajectoryResponse) */ {
 public:
  PushMyTrajectoryResponse();
  virtual ~PushMyTrajectoryResponse();

  PushMyTrajectoryResponse(const PushMyTrajectoryResponse& from);

  inline PushMyTrajectoryResponse& operator=(const PushMyTrajectoryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushMyTrajectoryResponse& default_instance();

  void Swap(PushMyTrajectoryResponse* other);

  // implements Message ----------------------------------------------

  inline PushMyTrajectoryResponse* New() const { return New(NULL); }

  PushMyTrajectoryResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushMyTrajectoryResponse& from);
  void MergeFrom(const PushMyTrajectoryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PushMyTrajectoryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 resp_code = 1;
  void clear_resp_code();
  static const int kRespCodeFieldNumber = 1;
  ::google::protobuf::int32 resp_code() const;
  void set_resp_code(::google::protobuf::int32 value);

  // optional string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:service.PushMyTrajectoryResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 resp_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_simulator_2eproto();
  friend void protobuf_AssignDesc_simulator_2eproto();
  friend void protobuf_ShutdownFile_simulator_2eproto();

  void InitAsDefaultInstance();
  static PushMyTrajectoryResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// State

// optional uint64 track_id = 1;
inline void State::clear_track_id() {
  track_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 State::track_id() const {
  // @@protoc_insertion_point(field_get:service.State.track_id)
  return track_id_;
}
inline void State::set_track_id(::google::protobuf::uint64 value) {
  
  track_id_ = value;
  // @@protoc_insertion_point(field_set:service.State.track_id)
}

// optional uint64 frame_id = 2;
inline void State::clear_frame_id() {
  frame_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 State::frame_id() const {
  // @@protoc_insertion_point(field_get:service.State.frame_id)
  return frame_id_;
}
inline void State::set_frame_id(::google::protobuf::uint64 value) {
  
  frame_id_ = value;
  // @@protoc_insertion_point(field_set:service.State.frame_id)
}

// optional uint64 timestamp_ms = 3;
inline void State::clear_timestamp_ms() {
  timestamp_ms_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 State::timestamp_ms() const {
  // @@protoc_insertion_point(field_get:service.State.timestamp_ms)
  return timestamp_ms_;
}
inline void State::set_timestamp_ms(::google::protobuf::uint64 value) {
  
  timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:service.State.timestamp_ms)
}

// optional string agent_type = 4;
inline void State::clear_agent_type() {
  agent_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& State::agent_type() const {
  // @@protoc_insertion_point(field_get:service.State.agent_type)
  return agent_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void State::set_agent_type(const ::std::string& value) {
  
  agent_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service.State.agent_type)
}
inline void State::set_agent_type(const char* value) {
  
  agent_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service.State.agent_type)
}
inline void State::set_agent_type(const char* value, size_t size) {
  
  agent_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service.State.agent_type)
}
inline ::std::string* State::mutable_agent_type() {
  
  // @@protoc_insertion_point(field_mutable:service.State.agent_type)
  return agent_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* State::release_agent_type() {
  // @@protoc_insertion_point(field_release:service.State.agent_type)
  
  return agent_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void State::set_allocated_agent_type(::std::string* agent_type) {
  if (agent_type != NULL) {
    
  } else {
    
  }
  agent_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_type);
  // @@protoc_insertion_point(field_set_allocated:service.State.agent_type)
}

// optional double x = 5;
inline void State::clear_x() {
  x_ = 0;
}
inline double State::x() const {
  // @@protoc_insertion_point(field_get:service.State.x)
  return x_;
}
inline void State::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:service.State.x)
}

// optional double y = 6;
inline void State::clear_y() {
  y_ = 0;
}
inline double State::y() const {
  // @@protoc_insertion_point(field_get:service.State.y)
  return y_;
}
inline void State::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:service.State.y)
}

// optional double vx = 7;
inline void State::clear_vx() {
  vx_ = 0;
}
inline double State::vx() const {
  // @@protoc_insertion_point(field_get:service.State.vx)
  return vx_;
}
inline void State::set_vx(double value) {
  
  vx_ = value;
  // @@protoc_insertion_point(field_set:service.State.vx)
}

// optional double vy = 8;
inline void State::clear_vy() {
  vy_ = 0;
}
inline double State::vy() const {
  // @@protoc_insertion_point(field_get:service.State.vy)
  return vy_;
}
inline void State::set_vy(double value) {
  
  vy_ = value;
  // @@protoc_insertion_point(field_set:service.State.vy)
}

// optional double psi_rad = 9;
inline void State::clear_psi_rad() {
  psi_rad_ = 0;
}
inline double State::psi_rad() const {
  // @@protoc_insertion_point(field_get:service.State.psi_rad)
  return psi_rad_;
}
inline void State::set_psi_rad(double value) {
  
  psi_rad_ = value;
  // @@protoc_insertion_point(field_set:service.State.psi_rad)
}

// optional double length = 10;
inline void State::clear_length() {
  length_ = 0;
}
inline double State::length() const {
  // @@protoc_insertion_point(field_get:service.State.length)
  return length_;
}
inline void State::set_length(double value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:service.State.length)
}

// optional double width = 11;
inline void State::clear_width() {
  width_ = 0;
}
inline double State::width() const {
  // @@protoc_insertion_point(field_get:service.State.width)
  return width_;
}
inline void State::set_width(double value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:service.State.width)
}

// -------------------------------------------------------------------

// Trajectory

// repeated .service.State state = 1;
inline int Trajectory::state_size() const {
  return state_.size();
}
inline void Trajectory::clear_state() {
  state_.Clear();
}
inline const ::service::State& Trajectory::state(int index) const {
  // @@protoc_insertion_point(field_get:service.Trajectory.state)
  return state_.Get(index);
}
inline ::service::State* Trajectory::mutable_state(int index) {
  // @@protoc_insertion_point(field_mutable:service.Trajectory.state)
  return state_.Mutable(index);
}
inline ::service::State* Trajectory::add_state() {
  // @@protoc_insertion_point(field_add:service.Trajectory.state)
  return state_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service::State >*
Trajectory::mutable_state() {
  // @@protoc_insertion_point(field_mutable_list:service.Trajectory.state)
  return &state_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service::State >&
Trajectory::state() const {
  // @@protoc_insertion_point(field_list:service.Trajectory.state)
  return state_;
}

// -------------------------------------------------------------------

// FetchEnvRequest

// -------------------------------------------------------------------

// FetchEnvResponse

// optional int32 resp_code = 1;
inline void FetchEnvResponse::clear_resp_code() {
  resp_code_ = 0;
}
inline ::google::protobuf::int32 FetchEnvResponse::resp_code() const {
  // @@protoc_insertion_point(field_get:service.FetchEnvResponse.resp_code)
  return resp_code_;
}
inline void FetchEnvResponse::set_resp_code(::google::protobuf::int32 value) {
  
  resp_code_ = value;
  // @@protoc_insertion_point(field_set:service.FetchEnvResponse.resp_code)
}

// optional string msg = 2;
inline void FetchEnvResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FetchEnvResponse::msg() const {
  // @@protoc_insertion_point(field_get:service.FetchEnvResponse.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FetchEnvResponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service.FetchEnvResponse.msg)
}
inline void FetchEnvResponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service.FetchEnvResponse.msg)
}
inline void FetchEnvResponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service.FetchEnvResponse.msg)
}
inline ::std::string* FetchEnvResponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:service.FetchEnvResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FetchEnvResponse::release_msg() {
  // @@protoc_insertion_point(field_release:service.FetchEnvResponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FetchEnvResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:service.FetchEnvResponse.msg)
}

// optional .service.Trajectory trajectory = 3;
inline bool FetchEnvResponse::has_trajectory() const {
  return !_is_default_instance_ && trajectory_ != NULL;
}
inline void FetchEnvResponse::clear_trajectory() {
  if (GetArenaNoVirtual() == NULL && trajectory_ != NULL) delete trajectory_;
  trajectory_ = NULL;
}
inline const ::service::Trajectory& FetchEnvResponse::trajectory() const {
  // @@protoc_insertion_point(field_get:service.FetchEnvResponse.trajectory)
  return trajectory_ != NULL ? *trajectory_ : *default_instance_->trajectory_;
}
inline ::service::Trajectory* FetchEnvResponse::mutable_trajectory() {
  
  if (trajectory_ == NULL) {
    trajectory_ = new ::service::Trajectory;
  }
  // @@protoc_insertion_point(field_mutable:service.FetchEnvResponse.trajectory)
  return trajectory_;
}
inline ::service::Trajectory* FetchEnvResponse::release_trajectory() {
  // @@protoc_insertion_point(field_release:service.FetchEnvResponse.trajectory)
  
  ::service::Trajectory* temp = trajectory_;
  trajectory_ = NULL;
  return temp;
}
inline void FetchEnvResponse::set_allocated_trajectory(::service::Trajectory* trajectory) {
  delete trajectory_;
  trajectory_ = trajectory;
  if (trajectory) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service.FetchEnvResponse.trajectory)
}

// -------------------------------------------------------------------

// PushMyTrajectoryRequest

// optional .service.Trajectory trajectory = 3;
inline bool PushMyTrajectoryRequest::has_trajectory() const {
  return !_is_default_instance_ && trajectory_ != NULL;
}
inline void PushMyTrajectoryRequest::clear_trajectory() {
  if (GetArenaNoVirtual() == NULL && trajectory_ != NULL) delete trajectory_;
  trajectory_ = NULL;
}
inline const ::service::Trajectory& PushMyTrajectoryRequest::trajectory() const {
  // @@protoc_insertion_point(field_get:service.PushMyTrajectoryRequest.trajectory)
  return trajectory_ != NULL ? *trajectory_ : *default_instance_->trajectory_;
}
inline ::service::Trajectory* PushMyTrajectoryRequest::mutable_trajectory() {
  
  if (trajectory_ == NULL) {
    trajectory_ = new ::service::Trajectory;
  }
  // @@protoc_insertion_point(field_mutable:service.PushMyTrajectoryRequest.trajectory)
  return trajectory_;
}
inline ::service::Trajectory* PushMyTrajectoryRequest::release_trajectory() {
  // @@protoc_insertion_point(field_release:service.PushMyTrajectoryRequest.trajectory)
  
  ::service::Trajectory* temp = trajectory_;
  trajectory_ = NULL;
  return temp;
}
inline void PushMyTrajectoryRequest::set_allocated_trajectory(::service::Trajectory* trajectory) {
  delete trajectory_;
  trajectory_ = trajectory;
  if (trajectory) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service.PushMyTrajectoryRequest.trajectory)
}

// -------------------------------------------------------------------

// PushMyTrajectoryResponse

// optional int32 resp_code = 1;
inline void PushMyTrajectoryResponse::clear_resp_code() {
  resp_code_ = 0;
}
inline ::google::protobuf::int32 PushMyTrajectoryResponse::resp_code() const {
  // @@protoc_insertion_point(field_get:service.PushMyTrajectoryResponse.resp_code)
  return resp_code_;
}
inline void PushMyTrajectoryResponse::set_resp_code(::google::protobuf::int32 value) {
  
  resp_code_ = value;
  // @@protoc_insertion_point(field_set:service.PushMyTrajectoryResponse.resp_code)
}

// optional string msg = 2;
inline void PushMyTrajectoryResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushMyTrajectoryResponse::msg() const {
  // @@protoc_insertion_point(field_get:service.PushMyTrajectoryResponse.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushMyTrajectoryResponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service.PushMyTrajectoryResponse.msg)
}
inline void PushMyTrajectoryResponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service.PushMyTrajectoryResponse.msg)
}
inline void PushMyTrajectoryResponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service.PushMyTrajectoryResponse.msg)
}
inline ::std::string* PushMyTrajectoryResponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:service.PushMyTrajectoryResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushMyTrajectoryResponse::release_msg() {
  // @@protoc_insertion_point(field_release:service.PushMyTrajectoryResponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushMyTrajectoryResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:service.PushMyTrajectoryResponse.msg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_simulator_2eproto__INCLUDED
